name: Deploy to AWS Lambda with Dockerfile

on:
  workflow_call:
    inputs:
      function_name:
        required: true
        default: false
        type: string
    secrets:
      SLACK_BOT_TOKEN:
        required: true
      GH_TOKEN:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SEATED_AWS_PRIMARY_REGION:
        required: true
      SEATED_AWS_SECONDARY_REGION:
        required: true

env:
  SERVICE_NAME: ${{ github.ref == 'refs/heads/release' && format('{0}-production', inputs.function_name) || ( github.ref == 'refs/heads/master' && format('{0}-staging', inputs.function_name) || format('{0}-uat', inputs.function_name)) }}
  SLACK_CHANNEL_ID: ${{ github.ref == 'refs/heads/release' && 'C01C6DHGQUX' || (github.ref == 'refs/heads/master' && 'C01D610KAAX' || 'C02GGKYN6SU') }}

jobs:

  Notify_Deploy_Start:
    name: Alert Start
    runs-on: ubuntu-latest
    outputs:
      slack_ts: ${{ steps.slack_notify_start.outputs.ts }}
    steps:
      - name: Slack
        id: slack_notify_start
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          payload: |
            {
            	"attachments": [
                  {
                    "color": "#C0C0C0",
                    "blocks": [
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "<https://github.com/${{github.actor}}|*@${{github.actor}}*> triggered new <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|*deployment*> on :lambda_2: <https://github.com/${{github.repository}}|*${{ env.SERVICE_NAME }}*>"
                              }
                          ]
                      }
            	    ]
                  }
                ]
            }


  Build:
    name: Build
    needs: Notify_Deploy_Start
    runs-on: ubuntu-latest
    outputs:
      slack_ts: ${{ steps.slack_notify_build.outputs.ts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.SEATED_AWS_PRIMARY_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push the image
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.function_name }}/.
          file: ${{ inputs.function_name }}/Dockerfile
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.SEATED_AWS_PRIMARY_REGION }}.amazonaws.com/${{ env.SERVICE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
      - name: Slack
        id: slack_notify_build
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          update-ts: ${{ needs.Notify_Deploy_Start.outputs.slack_ts }}
          payload: |
            {
            	"attachments": [
                  {
                    "color": "#C0C0C0",
                    "blocks": [
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "<https://github.com/${{github.actor}}|*@${{github.actor}}*> triggered new <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|*deployment*> on :lambda_2: <https://github.com/${{github.repository}}|*${{ env.SERVICE_NAME }}*>"
                              }
                          ]
                      }
            	    ]
                  },
                 {
                    "color": "#ffc800",
                    "blocks": [
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "Built :docker: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|*${{ env.SERVICE_NAME }}*> successfully. :white_check_mark:"
                              }
                          ]
                      }
            	    ]
                  }
                ]
            }


  Deploy:
    name: Deploy
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.SEATED_AWS_PRIMARY_REGION }}
      - name: Deploy
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.SEATED_AWS_PRIMARY_REGION }}
          function_name: ${{ env.SERVICE_NAME }}
          image_uri: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.SEATED_AWS_PRIMARY_REGION }}.amazonaws.com/${{ env.SERVICE_NAME }}:${{ github.sha }}

  Notify_Deploy_Success:
    name: Alert Success
    needs: [ Build, Deploy ]
    if: |
      always()
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          update-ts: ${{ needs.Build.outputs.slack_ts }}
          payload: |
            {
            	"attachments": [
                  {
                    "color": "#C0C0C0",
                    "blocks": [
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "*@${{github.actor}}* triggered new <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|*deployment*> on :lambda_2: <https://github.com/${{github.repository}}|*${{ env.SERVICE_NAME }}*>"
                              }
                          ]
                      },
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "Built :docker: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|*${{ env.SERVICE_NAME }}*> successfully. :white_check_mark:"
                              }
                          ]
                      }
            	    ]
                  },
                  {
                    "color": "#008000",
                    "blocks": [
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "*${{ github.ref == 'refs/heads/release' && 'Production' || (github.ref == 'refs/heads/master' && 'Staging' || 'UAT' ) }}* deployment *succeeded* in <https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/functions/${{ env.SERVICE_NAME }}?tab=code|*Primary*> region :confetti_ball:"
                              }
                          ]
                      }
            	    ]
                  }
                ]
            }
            

  Notify_Build_Failure:
    name: Alert Build Failure
    needs: [ Notify_Deploy_Start, Build ]
    if: always() && contains(needs.Build.result, 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          update-ts: ${{ needs.Notify_Deploy_Start.outputs.slack_ts }}
          payload: |
            {
            	"attachments": [
                  {
                    "color": "#C0C0C0",
                    "blocks": [
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "*@${{github.actor}}* triggered new <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|*deployment*> on :lambda_2: <https://github.com/${{github.repository}}|*${{ env.SERVICE_NAME }}*>"
                              }
                          ]
                      }
            	    ]
                  },
                  {
                    "color": "#FF0000",
                    "blocks": [
                      {
                          "type": "context",
                          "elements": [
                              {
                                  "type": "image",
                                  "image_url": "https://avatars.githubusercontent.com/u/${{github.actor_id}}",
                                  "alt_text": "avatar"
                              },
                              {
                                  "type": "mrkdwn",
                                  "text": "*@${{github.actor}}* Build *failed* :rotating_light:"
                              }
                          ]
                      }
            	    ]
                  }
                ]
            }